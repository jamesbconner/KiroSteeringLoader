{
  "name": "kiro-steering-loader",
  "displayName": "Kiro Steering Loader",
  "description": "Load steering agent templates into Kiro projects",
  "version": "0.0.2",
  "type": "module",
  "publisher": "jamesbconner",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/jamesbconner/KiroSteeringLoader.git"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "views": {
      "kiro-steering": [
        {
          "id": "kiroSteeringLoader",
          "name": "Steering Templates",
          "when": "true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "kiro-steering",
          "title": "Kiro Steering",
          "icon": "$(book)"
        }
      ]
    },
    "commands": [
      {
        "command": "kiroSteeringLoader.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "kiroSteeringLoader.loadTemplate",
        "title": "Load Template"
      },
      {
        "command": "kiroSteeringLoader.setTemplatesPath",
        "title": "Kiro Steering Loader: Set Templates Path",
        "category": "Kiro Steering Loader",
        "icon": "$(folder-opened)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "kiroSteeringLoader.refresh",
          "when": "view == kiroSteeringLoader",
          "group": "navigation"
        },
        {
          "command": "kiroSteeringLoader.setTemplatesPath",
          "when": "view == kiroSteeringLoader",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "kiroSteeringLoader.setTemplatesPath",
          "when": "view == kiroSteeringLoader",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "Kiro Steering Loader",
      "properties": {
        "kiroSteeringLoader.templatesPath": {
          "type": "string",
          "default": "",
          "description": "Path to the directory containing steering agent templates"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./tsconfig.build.json",
    "compile:tests": "tsc -p ./tsconfig.tests.json",
    "watch": "tsc -watch -p ./",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:unit": "vitest run --config vitest.unit.config.ts",
    "test:unit:watch": "vitest --config vitest.unit.config.ts",
    "test:unit:runner": "npx tsx tests/unit/runUnitTests.ts",
    "test:integration": "vitest run --config vitest.integration.config.ts",
    "test:integration:watch": "vitest --config vitest.integration.config.ts",
    "test:integration:runner": "npx tsx tests/integration/runIntegrationTests.ts",
    "test:performance": "vitest run --config vitest.performance.config.ts",
    "test:performance:watch": "vitest --config vitest.performance.config.ts",
    "test:performance:runner": "node --expose-gc --import tsx/esm tests/performance/runPerformanceTests.ts",
    "test:e2e": "vitest run --config vitest.e2e.config.ts",
    "test:e2e:runner": "npx tsx tests/e2e/runE2ETests.ts",
    "test:memory": "node --expose-gc node_modules/vitest/vitest.mjs run --config vitest.performance.config.ts tests/performance/memoryUsage.test.ts",
    "test:memory:watch": "node --expose-gc node_modules/vitest/vitest.mjs --config vitest.performance.config.ts tests/performance/memoryUsage.test.ts",
    "ci:check": "npx tsx scripts/ci-check.js",
    "ci:check:help": "npx tsx scripts/ci-check.js --help"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.74.0",
    "@vitest/coverage-v8": "^1.6.0",
    "@vitest/ui": "^1.6.0",
    "@vscode/test-electron": "^2.3.8",
    "tsx": "^4.20.5",
    "typescript": "^5.3.0",
    "vitest": "^1.6.0"
  }
}
